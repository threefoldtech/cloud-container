#!/usr/bin/ash

run_hook() {
   echo "mounting pts"

   if [ ! -z "$host" ]; then
      hostname "$host"
   fi

   mkdir -p /dev/pts || true
   mkdir -p /dev/shm || true
   mkdir -p /sys/fs/cgroup || true

   mount -t devpts -o rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=666 devpts /dev/pts
   mount -t cgroup none /sys/fs/cgroup
   mount -t tmpfs tmpfs /dev/shm
   ln -s /proc/self/fd /dev/fd

   echo "setting up network"
   bash /setupnetwork

   # we only care that an outgoing packet arrives at the gateway
   ping -c1 -w1 8.8.8.8
}

process_mounts() {
   for c in a b c d e f g h i j k l m n o p q r s t u v w x y z; do
      name=vd${c}
      target=$(eval echo \$$name)
      if [ "$target" = "/" ]; then
         echo "invalid mount target /"
         continue
      fi
      # we only try as long as the given mount
      # has a valid target
      if [ ! -z "$target" ]; then
         dst="/new_root/$target"
         mkdir -p "${dst}" || true
         echo "mounting $name on $target"
         mount "/dev/$name" "$dst"
      fi
   done
}
  
# manually tested on export qsfs_qsfsnamewithoutdashesorcolons="/New Folder/targ=t"
process_virtiofs_mounts() {
env | while IFS= read -r entry; do
      case $entry in
      qsfs_*)
            fs=${entry%%=*}
            fs=${fs#qsfs_}
            target=${entry#*=}
            if [ "$target" = "/" ]; then
               echo "invalid mount target /"
               continue
            fi

            dst="/new_root/$target"
            mkdir -p "$dst" || true
            echo "mounting virtiofs $fs on $target"
            mount -t virtiofs "$fs" "$dst"
            ;;
      esac
   done
}

fill_etc_hosts() {
   mkdir -p /new_root/etc
echo > /new_root/etc/hosts '127.0.0.1   localhost
127.0.1.1   '$(hostname)'

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters'
}

run_latehook() {
   echo "settign up environment"
   export HOME=/root
   export PATH=/bin:/sbin:/usr/bin:/usr/sbin
   mkdir -p /new_root/etc || true
   echo "updating resolv.conf"
   cp /etc/resolv.conf /new_root/etc/

   echo "process mounts"
   process_mounts

   echo "process virtiofs mounts"
   process_virtiofs_mounts

   echo "fill /etc/hosts"
   fill_etc_hosts

}

# vim: set ft=sh ts=4 sw=4 et:
